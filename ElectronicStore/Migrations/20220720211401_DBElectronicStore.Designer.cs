// <auto-generated />
using System;
using ElectronicStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicStore.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220720211401_DBElectronicStore")]
    partial class DBElectronicStore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ElectronicStore.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Number")
                        .HasMaxLength(12)
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mikhail",
                            Number = 375293232333m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pavel",
                            Number = 375293232324m
                        });
                });

            modelBuilder.Entity("ElectronicStore.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryManId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryManId = 6,
                            OrderId = 1
                        });
                });

            modelBuilder.Entity("ElectronicStore.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ShopAssistantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopAssistantId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "IPD,20, Pinsk, Brest region, Belarus",
                            ClientId = 1,
                            Date = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            ShopAssistantId = 5
                        });
                });

            modelBuilder.Entity("ElectronicStore.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Personnels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Personnel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 22,
                            Name = "Alex",
                            Salary = 1200.0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 20,
                            Name = "Vlad",
                            Salary = 1100.0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Age = 31,
                            Name = "Sofia",
                            Salary = 1000.0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 4,
                            Age = 28,
                            Name = "Andrey",
                            Salary = 1300.0,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("ElectronicStore.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Intel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nvidia"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kingston"
                        },
                        new
                        {
                            Id = 4,
                            Name = "AMD"
                        });
                });

            modelBuilder.Entity("ElectronicStore.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "GeForce GTX 1050Ti",
                            ProducerId = 2,
                            ProductCategoryId = 1,
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "I5 8300h",
                            ProducerId = 1,
                            ProductCategoryId = 2,
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "I7 8700k",
                            ProducerId = 1,
                            ProductCategoryId = 2,
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ryzen5 5600x",
                            ProducerId = 4,
                            ProductCategoryId = 2,
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "GeForce RTX 3050 Ti ",
                            ProducerId = 2,
                            ProductCategoryId = 1,
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "DDR4 KF432C16BBK2/16",
                            ProducerId = 3,
                            ProductCategoryId = 3,
                            ProviderId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "DDR4 KVR32S22S8/8",
                            ProducerId = 3,
                            ProductCategoryId = 3,
                            ProviderId = 1
                        });
                });

            modelBuilder.Entity("ElectronicStore.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Video Graphic Card"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CPU"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RAM"
                        });
                });

            modelBuilder.Entity("ElectronicStore.ProductInStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInStock");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10L,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 12L,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 20L,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 25L,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 15L,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            Amount = 8L,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            Amount = 17L,
                            ProductId = 7
                        });
                });

            modelBuilder.Entity("ElectronicStore.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Number")
                        .HasMaxLength(12)
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asbis",
                            Number = 375291111111m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kosmotech",
                            Number = 0m
                        },
                        new
                        {
                            Id = 3,
                            Name = "IrsenGroup",
                            Number = 0m
                        });
                });

            modelBuilder.Entity("ElectronicStore.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeliveryId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Comment = "Cool!",
                            DeliveryId = 1
                        });
                });

            modelBuilder.Entity("ElectronicStore.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Destination = "Minsk, Belarus",
                            Name = "Electronics Store"
                        });
                });

            modelBuilder.Entity("ElectronicStore.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Supplies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10L,
                            Date = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProviderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 15L,
                            Date = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 20L,
                            Date = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProviderId = 3
                        });
                });

            modelBuilder.Entity("ElectronicStore.DeliveryMan", b =>
                {
                    b.HasBaseType("ElectronicStore.Personnel");

                    b.Property<bool>("IsDeliveringNow")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("DeliveryMan");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Age = 18,
                            Name = "Maksim",
                            Salary = 800.0,
                            StoreId = 1,
                            IsDeliveringNow = true
                        },
                        new
                        {
                            Id = 7,
                            Age = 18,
                            Name = "Igor",
                            Salary = 800.0,
                            StoreId = 1,
                            IsDeliveringNow = false
                        });
                });

            modelBuilder.Entity("ElectronicStore.Manager", b =>
                {
                    b.HasBaseType("ElectronicStore.Personnel");

                    b.Property<string>("Departament")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Manager");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Age = 45,
                            Name = "John",
                            Salary = 2000.0,
                            StoreId = 1,
                            Departament = "IT"
                        });
                });

            modelBuilder.Entity("ElectronicStore.ShopAssistant", b =>
                {
                    b.HasBaseType("ElectronicStore.Personnel");

                    b.HasDiscriminator().HasValue("ShopAssistant");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            Age = 36,
                            Name = "Kate",
                            Salary = 1400.0,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("ElectronicStore.Order", b =>
                {
                    b.HasOne("ElectronicStore.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicStore.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicStore.ShopAssistant", "ShopAssistant")
                        .WithMany("Orders")
                        .HasForeignKey("ShopAssistantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");

                    b.Navigation("ShopAssistant");
                });

            modelBuilder.Entity("ElectronicStore.Personnel", b =>
                {
                    b.HasOne("ElectronicStore.Store", null)
                        .WithMany("Personnels")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElectronicStore.Product", b =>
                {
                    b.HasOne("ElectronicStore.Producer", "ItsProducer")
                        .WithMany("Products")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicStore.ProductCategory", "ThisProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicStore.Provider", "ItsProvider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItsProducer");

                    b.Navigation("ItsProvider");

                    b.Navigation("ThisProductCategory");
                });

            modelBuilder.Entity("ElectronicStore.ProductInStock", b =>
                {
                    b.HasOne("ElectronicStore.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ElectronicStore.Review", b =>
                {
                    b.HasOne("ElectronicStore.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicStore.Delivery", "Delivery")
                        .WithMany()
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("ElectronicStore.Supply", b =>
                {
                    b.HasOne("ElectronicStore.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ElectronicStore.Producer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ElectronicStore.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ElectronicStore.Provider", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ElectronicStore.Store", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("ElectronicStore.ShopAssistant", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
